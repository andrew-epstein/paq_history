
-> Saturday, June 7, 2008
-> rugxulo _AT_ gmail _DOT_ com

                           +================+
                           |  PAQ8o8z TODO  |
                           +================+

- add MAKE.BAT options to use GAS of WASM or FASM instead of NASM
  - also maybe try using them anyways (if all else fails)
  - what about LZASM ??  ( http://lzasm.hotbox.ru )
- add "make dos32a" option to use that (instead of Causeway)
  - maybe ?? use "sb /r" from 9.1.2 instead of old, non-SSE 7.2 from OW (meh)
- improve help screen A LOT !!
- explain why it's named "PAQ8o8z"
  - 'z' is supposed to be a unique identifier, hopefully not conflicting
     with any other potential tweaks, e.g. PAQ8o8a
- be archive-compatible with .paq8o8 files (header and output filename .ext)
  - mention "-d" for .paq outputted by Causeway/DOS
- write proper docs w/ requirements (38 MB RAM for normal, 47 MB for .JPG ?)
- announce on BTTR's Forum (and on my website's "News" section)
- mention that "-O" is almost as good as "-O2" for DJGPP in this case
  (yet faster compile) as well as 3.4.4 being a faster compile than 4.2.3
  - "-O" takes 4.62 secs. to compress PAQ8O8Z.CPP (AMD64x2 TK-53 1.6 Ghz)
  - "-O2" takes 4.12 secs. (")
  - "-O3" takes 4.01 secs. (")
  - OpenWatcom is still faster to compile, though, than DJGPP -O0 (even
    moreso with "-od")
- mention that the OpenWatcom target is slightly slower than DJGPP/GCC but
  compiles much faster (but no wildcards!)
- try to get wildcards working in OpenWatcom compiles
- mention explicit instructions for how to compile via latest MinGW 3.4.5
- include benchmarks text (P166 w/o MMX, PII, P4, AMD64x2, QEMU, DOSBox,
  DOSEMU) for comparison reference
- include specs for test setups (DR-EMM386, JEMMEX, bare, WinXP, etc.)
- mention that SSE2 isn't really much faster than MMX in this instance (5% ??)
  - possibly much faster on Core 2 Duos??
- mention how to disasm FAST-PAQ.O* obj files (wdis -a, objdump -d)
- include .ASM obj files in case someone doesn't have / want NASM
- test drag-n-drop on WinXP (all .EXEs !!)
- test dir compression support (for both DOS and Windows targets)
  - does it work? can it work ??
- allow "make -n" to act like a real MAKE.EXE (dry run)
- test on P4 in real DOS (FreeDOS bootdisk)
- mention all cpus / OSes tested (e.g. PII / PuppyLinux + DOSEMU, DOSBox,
  QEMU, WinXP Home SP2, Win Vista SP1)
  - don't forget to mention .dosemurc and dosbox.conf changes needed !!
    - (you need 2 files: both *bin.tgz and *freedos-bin.tgz)
    - cd ~ ; mkdir mydos ; cd mydos ; tar xzf /tmp/dosemu* ; cd dosemu/conf
      sed '/\$_dpmi.*(5000)/{s/^#//;s/(5000)/(A000)/}' dosemurc > ~/.dosemurc
      (by default, only 20 MB max. DPMI is available, so I extend it to 40 MB)
- mention HXRT.ZIP w/ URL
  - this lets the static OpenWatcom Win32 .EXE run in pure DOS (if desired)
    - uh, does this not work anymore ??? (seems not to under QEMU or DOSBox)
      - bug report time, if true (since it USED to work a few months ago)
- mention Vista registry entry that fixes DPMI limit (dword, e.g. "128000000")
  - "HKLM\System\CurrentControlSet\Control\Wow\DpmiLimit"
- mention HXNTVDM (plus URL, requirements for reassembling, etc.)
  - its src + JWasm + Wlink + Win32inc (at least)
  - maybe include it entirely ??  (it's only 13k ZIP'd !)
- explain what DOS extenders support SSE (or how to enable) + pitfalls
  - DOS/32A 9.1.2 or Causeway 4.02 (neither of which OpenWatcom comes with)
    - OpenWatcom only includes old, outdated versions !!
- mention bugs / lacks / advantages in original PAQ8o8 Win32 compile:
  - won't run except as admin (e.g. Vista whereas XP is usually admin)
    - "tmpfile: Permission denied" (doh)
  - doesn't run under HXRT.ZIP in pure DOS (needs MSVCRT.DLL)
  - bigger .EXE (116k UPX'd vs. 68k UPX'd)
  + always uses MMX by default (even if not present)
  + does accept wildcards


(much later):

- hand-tweak NOASM routines (i.e. remove any bogus uses of ESI)
- allow external .DLL (and DXE3) versions of asm routines so that
  various versions for specific cpus can optionally be used (faster ??)
  - e.g. 486, 586, Pentium3, Pentium4, Athlon64, Core2
- reduce memory requirements ?! (how ???)
- multithreading ??? (even in DOS via GNU pthreads or FSU or CLWP or ...)
