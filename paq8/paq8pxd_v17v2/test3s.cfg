// Fast general model test3s.cfg
// StateMapContext  SMC
// APM1 APM1
// APM2 APM2 //not used
// RunContextMap RCM
// SmallStationaryContextMap  SCM
// MContextMap MCM
// ContextMap CM
// Mixer MX
// SMC,APM1,APM2,RCM,SCM,MCM,CM,MX (1,2,3,4,5,6,7,8,9)
enum {SMC=1,APM1,APM2,RCM,SCM,MCM,CM,MX,MC};
int *t;
int *tc;
int cxt,cxt1,cxt2,cxt3,cxt4,w4;

int mpw(int x) {
    if (x<2) return 4;
    if (x==2) return 3;
    if (x>=3 && x<=5) return 2;
    if (x>=6 && x<=11) return 1;
    if (x>=12 && x<=15) return 0;
}
// update is called in VM after every bit
int update(int y,int c0,int bpos,int c4,int pos){ 
    int i,pr0,pr;
    for (i=0; i<4; ++i) tc[t[i]]=smn(tc[t[i]]);
    if (bpos== 0){
        cxt4=cxt3;
        cxt3=cxt2;
        cxt2=cxt1*256;
        cxt1=(c4&255);
        w4= w4*4+mpw(cxt1>>4);
    }
    t[0]=cxt1*256+c0;
    t[1]=cxt2+c0+0x10000;
    t[2]=cxt3+c0+0x20000;
    t[3]=cxt4+c0+0x40000;
    mxa(0,256); //add to mixer(0)
    for (i=0; i<4; ++i) smp(i,tc[t[i]],1023);
    mxc(0); //mix components into mixer(0)
    mxs(0, gcr(0,0,MC),256); 
    mxs(0, c0, 256);
    mxs(0, c4&255, 256);
    mxs(0,w4&0xff, 256);
    pr0=mxp(0); //predict mixer(0)
    pr=apm(0,pr0,c0,7);
    return (apm(2,pr,c0+256*cxt1,7)+apm(1,pr0,h2(c0,w4&0xfffff),7)+1)>>1;
}
void block(int a,int b) { 
    
}
// main is called only once after VM init.
int main() { 
    if (!(t = malloc(4*sizeof(int)))) { exit(-1); }
    if (!(tc = malloc(0x80000*sizeof(int)))) { exit(-1); }
    cxt4=cxt3=cxt2=cxt1=w4=0;
    cxt=1;
    vms(4,3,0,0,0,0,0,1,1); 
    vmi(MC,0,1,65534,0);
    vmi(APM1,0,256,0,-1);
    vmi(SMC,0,256,0,0);
    vmi(SMC,1,256,0,0);
    vmi(SMC,2,256,0,0);
    vmi(SMC,3,256,0,0);
    vmi(APM1,1,0x10000,0,-1);
    vmi(APM1,2,0x10000,0,-1);
    vmi(MX,0,7,512+256+256,4);  	
}